import {
  init_withStyles,
  withStyles_default
} from "./chunk-MJV5XCBG.js";
import {
  _defineProperty,
  _objectWithoutProperties,
  clsx_m_default,
  init_clsx_m,
  init_defineProperty,
  init_objectWithoutProperties
} from "./chunk-EBZLRUIJ.js";
import {
  _extends,
  init_extends
} from "./chunk-B2ZQ5MHT.js";
import {
  require_prop_types
} from "./chunk-SRDREKJA.js";
import "./chunk-AAY5IJNO.js";
import {
  require_react
} from "./chunk-IWY24JH5.js";
import "./chunk-5IM2W4UW.js";
import "./chunk-O37IYKPJ.js";
import {
  __toESM
} from "./chunk-ROME4SDB.js";

// node_modules/@material-ui/core/esm/Toolbar/Toolbar.js
init_extends();
init_objectWithoutProperties();
init_defineProperty();
var React = __toESM(require_react());
var import_prop_types = __toESM(require_prop_types());
init_clsx_m();
init_withStyles();
var styles = function styles2(theme) {
  return {
    /* Styles applied to the root element. */
    root: {
      position: "relative",
      display: "flex",
      alignItems: "center"
    },
    /* Styles applied to the root element if `disableGutters={false}`. */
    gutters: _defineProperty({
      paddingLeft: theme.spacing(2),
      paddingRight: theme.spacing(2)
    }, theme.breakpoints.up("sm"), {
      paddingLeft: theme.spacing(3),
      paddingRight: theme.spacing(3)
    }),
    /* Styles applied to the root element if `variant="regular"`. */
    regular: theme.mixins.toolbar,
    /* Styles applied to the root element if `variant="dense"`. */
    dense: {
      minHeight: 48
    }
  };
};
var Toolbar = React.forwardRef(function Toolbar2(props, ref) {
  var classes = props.classes, className = props.className, _props$component = props.component, Component = _props$component === void 0 ? "div" : _props$component, _props$disableGutters = props.disableGutters, disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters, _props$variant = props.variant, variant = _props$variant === void 0 ? "regular" : _props$variant, other = _objectWithoutProperties(props, ["classes", "className", "component", "disableGutters", "variant"]);
  return React.createElement(Component, _extends({
    className: clsx_m_default(classes.root, classes[variant], className, !disableGutters && classes.gutters),
    ref
  }, other));
});
true ? Toolbar.propTypes = {
  /**
   * Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.
   */
  children: import_prop_types.default.node,
  /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */
  classes: import_prop_types.default.object.isRequired,
  /**
   * @ignore
   */
  className: import_prop_types.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types.default.elementType,
  /**
   * If `true`, disables gutter padding.
   */
  disableGutters: import_prop_types.default.bool,
  /**
   * The variant to use.
   */
  variant: import_prop_types.default.oneOf(["regular", "dense"])
} : void 0;
var Toolbar_default = withStyles_default(styles, {
  name: "MuiToolbar"
})(Toolbar);
export {
  Toolbar_default as default
};
//# sourceMappingURL=@material-ui_core_Toolbar.js.map
