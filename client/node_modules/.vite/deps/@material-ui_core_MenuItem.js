import {
  ListItem_default
} from "./chunk-HIE5MPPE.js";
import "./chunk-H7JGTCTU.js";
import "./chunk-DI4MUTP3.js";
import "./chunk-ORXDJZRN.js";
import "./chunk-SXCOEKRO.js";
import "./chunk-XGEHHR4B.js";
import "./chunk-R3RX7MBE.js";
import "./chunk-FDX6AYY7.js";
import "./chunk-AQUV7EJF.js";
import "./chunk-OIIPIFAB.js";
import {
  init_withStyles,
  withStyles_default
} from "./chunk-MJV5XCBG.js";
import {
  _defineProperty,
  _objectWithoutProperties,
  clsx_m_default,
  init_clsx_m,
  init_defineProperty,
  init_objectWithoutProperties
} from "./chunk-EBZLRUIJ.js";
import {
  _extends,
  init_extends
} from "./chunk-B2ZQ5MHT.js";
import {
  require_prop_types
} from "./chunk-SRDREKJA.js";
import "./chunk-AAY5IJNO.js";
import {
  require_react
} from "./chunk-IWY24JH5.js";
import "./chunk-5IM2W4UW.js";
import "./chunk-O37IYKPJ.js";
import {
  __toESM
} from "./chunk-ROME4SDB.js";

// node_modules/@material-ui/core/esm/MenuItem/MenuItem.js
init_objectWithoutProperties();
init_defineProperty();
init_extends();
var React = __toESM(require_react());
var import_prop_types = __toESM(require_prop_types());
init_clsx_m();
init_withStyles();
var styles = function styles2(theme) {
  return {
    /* Styles applied to the root element. */
    root: _extends({}, theme.typography.body1, _defineProperty({
      minHeight: 48,
      paddingTop: 6,
      paddingBottom: 6,
      boxSizing: "border-box",
      width: "auto",
      overflow: "hidden",
      whiteSpace: "nowrap"
    }, theme.breakpoints.up("sm"), {
      minHeight: "auto"
    })),
    // TODO v5: remove
    /* Styles applied to the root element if `disableGutters={false}`. */
    gutters: {},
    /* Styles applied to the root element if `selected={true}`. */
    selected: {},
    /* Styles applied to the root element if dense. */
    dense: _extends({}, theme.typography.body2, {
      minHeight: "auto"
    })
  };
};
var MenuItem = React.forwardRef(function MenuItem2(props, ref) {
  var classes = props.classes, className = props.className, _props$component = props.component, component = _props$component === void 0 ? "li" : _props$component, _props$disableGutters = props.disableGutters, disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters, ListItemClasses = props.ListItemClasses, _props$role = props.role, role = _props$role === void 0 ? "menuitem" : _props$role, selected = props.selected, tabIndexProp = props.tabIndex, other = _objectWithoutProperties(props, ["classes", "className", "component", "disableGutters", "ListItemClasses", "role", "selected", "tabIndex"]);
  var tabIndex;
  if (!props.disabled) {
    tabIndex = tabIndexProp !== void 0 ? tabIndexProp : -1;
  }
  return React.createElement(ListItem_default, _extends({
    button: true,
    role,
    tabIndex,
    component,
    selected,
    disableGutters,
    classes: _extends({
      dense: classes.dense
    }, ListItemClasses),
    className: clsx_m_default(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),
    ref
  }, other));
});
true ? MenuItem.propTypes = {
  /**
   * Menu item contents.
   */
  children: import_prop_types.default.node,
  /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */
  classes: import_prop_types.default.object.isRequired,
  /**
   * @ignore
   */
  className: import_prop_types.default.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: import_prop_types.default.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.
   */
  dense: import_prop_types.default.bool,
  /**
   * @ignore
   */
  disabled: import_prop_types.default.bool,
  /**
   * If `true`, the left and right padding is removed.
   */
  disableGutters: import_prop_types.default.bool,
  /**
   * `classes` prop applied to the [`ListItem`](/api/list-item/) element.
   */
  ListItemClasses: import_prop_types.default.object,
  /**
   * @ignore
   */
  role: import_prop_types.default.string,
  /**
   * @ignore
   */
  selected: import_prop_types.default.bool,
  /**
   * @ignore
   */
  tabIndex: import_prop_types.default.number
} : void 0;
var MenuItem_default = withStyles_default(styles, {
  name: "MuiMenuItem"
})(MenuItem);
export {
  MenuItem_default as default
};
//# sourceMappingURL=@material-ui_core_MenuItem.js.map
